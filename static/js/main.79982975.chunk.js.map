{"version":3,"sources":["Pet.js","Results.js","useDropdown.js","themeContext.js","SearchParams.js","Modals.js","carousel.js","errorBoundary.js","details.js","App.js","serviceWorker.js","index.js"],"names":["Pet","name","animal","breed","media","location","id","hero","length","small","to","className","src","alt","Results","pets","map","pet","type","key","breeds","primary","photos","contact","address","city","state","useDropdown","label","defaultState","options","useState","setState","replace","toLowerCase","htmlFor","value","onChange","e","target","onBlur","disabled","item","ThemeContext","createContext","SearchParams","setLocation","setBreeds","ANIMALS","AnimalDropdown","BreedDropdown","setBreed","setPets","useContext","theme","setTheme","a","animals","useEffect","then","breedStrings","breedObj","console","error","onSubmit","event","preventDefault","requestPets","placeholder","style","backgroundColor","Modal","children","elRef","useRef","current","document","createElement","modalRoot","getElementById","appendChild","removeChild","createPortal","Carousel","active","handleIndexClick","dataset","index","this","photo","onClick","data-index","large","React","Component","ErrorBoundary","props","hasError","redirect","info","setTimeout","Details","toggleModal","showModal","adopt","navigate","url","loading","description","Consumer","DetailsWithErrorBoundary","App","themeHook","Provider","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.79982975.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport default function Pet({ name, animal, breed, media, location, id }) {\r\n  let hero = \"https://placecorgi.com/300/300\";\r\n  if (media.length) {\r\n    hero = media[0].small;\r\n  }\r\n  return (\r\n    <Link to={`details/${id}`} className=\"pet\">\r\n      <div className=\"image-container\">\r\n        <img src={hero} alt={name} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h1>{name}</h1>\r\n        <h2>{`${animal} — ${breed} — ${location}`}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pet from \"./Pet\";\r\n\r\nconst Results = ({ pets }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      {pets.length === 0 ? (\r\n        <h1>No Pets Found</h1>\r\n      ) : (\r\n        pets.map((pet) => (\r\n          <Pet\r\n            animal={pet.type}\r\n            key={pet.id}\r\n            name={pet.name}\r\n            breed={pet.breeds.primary}\r\n            media={pet.photos}\r\n            location={`${pet.contact.address.city}, ${pet.contact.address.state}`}\r\n            id={pet.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from \"react\";\r\n\r\nconst useDropdown = (label, defaultState, options) => {\r\n  const [state, setState] = useState(defaultState);\r\n  const id = `use-dropdown-${label.replace(\" \", \"\").toLowerCase()}`;\r\n  const Dropdown = () => (\r\n    <label htmlFor={id}>\r\n      {label}\r\n      <select\r\n        id={id}\r\n        value={state}\r\n        onChange={(e) => setState(e.target.value)}\r\n        onBlur={(e) => setState(e.target.value)}\r\n        disabled={options.length === 0}\r\n      >\r\n        <option>All</option>\r\n        {options.map((item) => (\r\n          <option key={item} value={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n  return [state, Dropdown, setState];\r\n};\r\n\r\nexport default useDropdown;\r\n","import { createContext } from \"react\";\r\n\r\nconst ThemeContext = createContext([\"green\", () => {}]);\r\n\r\nexport default ThemeContext;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport pet, { ANIMALS } from \"@frontendmasters/pet\";\r\nimport Results from \"./Results\";\r\nimport useDropdown from \"./useDropdown\";\r\nimport ThemeContext from \"./themeContext\";\r\n\r\nconst SearchParams = () => {\r\n  const [location, setLocation] = useState(\"Seattle,WA\");\r\n  const [breeds, setBreeds] = useState([]);\r\n  const [animal, AnimalDropdown] = useDropdown(\"Animal\", \"dog\", ANIMALS);\r\n  const [breed, BreedDropdown, setBreed] = useDropdown(\"Breed\", \"\", breeds);\r\n  const [pets, setPets] = useState([]);\r\n  const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n  async function requestPets() {\r\n    const { animals } = await pet.animals({\r\n      location,\r\n      breed,\r\n      type: animal,\r\n    });\r\n\r\n    setPets(animals || []);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBreeds([]);\r\n    setBreed(\"\");\r\n\r\n    pet.breeds(animal).then(({ breeds: apiBreeds }) => {\r\n      const breedStrings = apiBreeds.map((breedObj) => breedObj.name);\r\n      setBreeds(breedStrings);\r\n    }, console.error);\r\n  }, [animal, setBreed, setBreeds]);\r\n\r\n  return (\r\n    <div className=\"search-params\">\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          requestPets();\r\n        }}\r\n      >\r\n        <label htmlFor=\"location\">\r\n          Location\r\n          <input\r\n            id=\"location\"\r\n            value={location}\r\n            placeholder=\"Location\"\r\n            onChange={(event) => setLocation(event.target.value)}\r\n          />\r\n        </label>\r\n        <AnimalDropdown />\r\n        <BreedDropdown />\r\n        <label htmlFor=\"theme\">\r\n          Theme\r\n          <select\r\n            value={theme}\r\n            onChange={(e) => setTheme(e.target.value)}\r\n            onBlur={(e) => setTheme(e.target.value)}\r\n          >\r\n            <option value=\"peru\">Peru</option>\r\n            <option value=\"darkblue\">Dark Blue</option>\r\n            <option value=\"mediumorchid\">Medium Orchid</option>\r\n            <option value=\"chartreuse\">Chartreuse</option>\r\n          </select>\r\n        </label>\r\n        <button style={{ backgroundColor: theme }}>Submit</button>\r\n      </form>\r\n      <Results pets={pets} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchParams;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst Modal = ({ children }) => {\r\n  const elRef = useRef(null);\r\n  if (!elRef.current) {\r\n    elRef.current = document.createElement(\"div\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const modalRoot = document.getElementById(\"modal\");\r\n    modalRoot.appendChild(elRef.current);\r\n    return () => modalRoot.removeChild(elRef.current);\r\n  }, []);\r\n\r\n  return createPortal(<div>{children}</div>, elRef.current);\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0,\r\n  };\r\n  static getDerivedStateFromProps({ media }) {\r\n    let photos = [\"http://placecorgi.com/600/600\"];\r\n\r\n    if (media.length) {\r\n      photos = media.map(({ large }) => large);\r\n    }\r\n\r\n    return { photos };\r\n  }\r\n\r\n  handleIndexClick = (event) => {\r\n    this.setState({\r\n      active: +event.target.dataset.index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { photos, active } = this.state;\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active]} alt=\"animal\" />\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo, index) => (\r\n            <img\r\n              key={photo}\r\n              onClick={this.handleIndexClick}\r\n              data-index={index}\r\n              src={photo}\r\n              className={index === active ? \"active\" : \"\"}\r\n              alt=\"animal thumbnail\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","// mostly code from reactjs.org/docs/error-boundaries.html\r\nimport React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"@reach/router\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, redirect: false };\r\n  }\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    console.error(\"ErrorBoundary caught an error\", error, info);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.hasError) {\r\n      setTimeout(() => this.setState({ redirect: true }), 5000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (this.state.hasError) {\r\n      return (\r\n        <h1>\r\n          There was an error with this listing. <Link to=\"/\">Click here</Link>{\" \"}\r\n          to back to the home page or wait five seconds.\r\n        </h1>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport pet from \"@frontendmasters/pet\";\r\nimport { navigate } from \"@reach/router\";\r\nimport Modal from \"./Modals\";\r\nimport Carousel from \"./carousel\";\r\nimport ErrorBoundary from \"./errorBoundary\";\r\nimport ThemeContext from \"./themeContext\";\r\n\r\nclass Details extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      showModal: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    pet.animal(this.props.id).then(({ animal }) => {\r\n      this.setState({\r\n        url: animal.url,\r\n        name: animal.name,\r\n        animal: animal.type,\r\n        location: `${animal.contact.address.city}, ${animal.contact.address.state}`,\r\n        description: animal.description,\r\n        media: animal.photos,\r\n        breed: animal.breeds.primary,\r\n        loading: false,\r\n      });\r\n    }, console.error);\r\n  }\r\n\r\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\r\n  adopt = () => navigate(this.state.url);\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>loading...</h1>;\r\n    }\r\n\r\n    const {\r\n      animal,\r\n      breed,\r\n      location,\r\n      description,\r\n      name,\r\n      media,\r\n      showModal,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media} />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>{`${animal} — ${breed} — ${location}`}</h2>\r\n          <ThemeContext.Consumer>\r\n            {([theme]) => (\r\n              <button\r\n                style={{ backgroundColor: theme }}\r\n                onClick={this.toggleModal}\r\n              >\r\n                Adopt {name}\r\n              </button>\r\n            )}\r\n          </ThemeContext.Consumer>\r\n          ;<p>{description}</p>\r\n          {showModal ? (\r\n            <Modal>\r\n              <div>\r\n                <h1>Would you like to adopt {name}?</h1>\r\n                <div className=\"buttons\">\r\n                  <button onClick={this.adopt}>Yes</button>\r\n                  <button onClick={this.toggleModal}>\r\n                    No, I have no feelings\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// replace export\r\nexport default function DetailsWithErrorBoundary(props) {\r\n  return (\r\n    <ErrorBoundary>\r\n      <Details {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Router, Link } from \"@reach/router\";\nimport SearchParams from \"./SearchParams\";\nimport Details from \"./details\";\nimport ThemeContext from \"./themeContext\";\n\nconst App = () => {\n  const themeHook = useState(\"darkblue\");\n  return (\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <header>\n          <Link to=\"/\">Adopt Me!</Link>\n        </header>\n        <Router>\n          <SearchParams path=\"/\" />\n          <Details path=\"/details/:id\" />\n        </Router>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}